var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/ConnectionNotFoundError.html",[0,1.221,1,2.252]],["body/classes/ConnectionNotFoundError.html",[1,3.23,2,2.313,3,0.348,4,0.348,5,3.728,6,3.728,7,0.542,8,2.857,9,2.313,10,2.857,11,2.857,12,4.484,13,3.728,14,3.23,15,3.728,16,1.231,17,2.857,18,1.231,19,0.024,20,0.029,21,0.029,22,0.024]],["title/injectables/DNSHealthIndicator.html",[23,1.221,24,1.613]],["body/injectables/DNSHealthIndicator.html",[3,0.21,4,0.21,7,0.59,16,0.743,18,1.057,19,0.03,20,0.021,21,0.032,22,0.015,24,1.986,25,1.057,26,0.619,27,2.25,28,1.268,29,1.18,30,1.396,31,1.344,32,1.645,33,1.268,34,2.706,35,2.25,36,2.706,37,0.967,38,0.37,39,1.057,40,1.645,41,2.453,42,1.645,43,1.645,44,1.396,45,2.706,46,4.88,47,1.545,48,1.601,49,1.467,50,1.23,51,0.623,52,0.747,53,2.25,54,1.725,55,1.725,56,1.915,57,3.109,58,1.23,59,3.849,60,2.198,61,2.706,62,1.503,63,1.344,64,2.013,65,1.949,66,1.396,67,1.545,68,2.203,69,1.949,70,2.706,71,2.706,72,2.706,73,2.706,74,1.057,75,1.156,76,1.645,77,1.376,78,1.749,79,1.503,80,1.156,81,1.057,82,1.156,83,1.057,84,1.057,85,1.156,86,1.057]],["title/interfaces/DatabasePingCheckSettings.html",[87,1.024,88,2.252]],["body/interfaces/DatabasePingCheckSettings.html",[3,0.308,4,0.308,11,3.814,19,0.021,20,0.027,21,0.032,22,0.021,26,0.908,38,0.542,51,0.601,52,0.872,62,2.121,88,2.857,89,1.549,90,3.298,91,2.565,92,1.131,93,3.298,94,2.565,95,4.973,96,2.528,97,3.169,98,2.857,99,2.528,100,2.857,101,2.857]],["title/injectables/DiskHealthIndicator.html",[23,1.221,102,1.613]],["body/injectables/DiskHealthIndicator.html",[3,0.21,4,0.21,7,0.54,16,0.741,18,1.054,19,0.029,20,0.021,21,0.033,22,0.014,25,1.054,26,0.617,28,1.264,29,1.024,31,1.461,32,1.641,33,1.264,37,0.964,38,0.368,39,1.054,40,1.641,42,1.641,43,1.641,48,1.599,49,1.258,50,1.054,51,0.589,52,0.588,56,1.742,58,1.054,60,2.193,63,1.152,64,1.903,68,2.2,74,1.054,75,1.153,76,1.641,77,1.373,78,1.746,79,1.5,80,1.153,81,1.054,82,1.153,83,1.054,84,1.054,85,1.153,86,1.054,92,0.562,102,1.981,103,1.943,104,3.509,105,3.221,106,2.243,107,1.943,108,2.243,109,1.981,110,3.841,111,2.698,112,3.193,113,4.472,114,2.243,115,3.193,116,3.841,117,3.841,118,2.698,119,3.841,120,3.718,121,3.841,122,2.698,123,2.243,124,2.243,125,2.698,126,2.698,127,2.698]],["title/injectables/GRPCHealthIndicator.html",[23,1.221,128,1.613]],["body/injectables/GRPCHealthIndicator.html",[3,0.187,4,0.187,7,0.507,16,0.662,18,0.972,19,0.026,20,0.019,21,0.033,22,0.013,25,0.941,26,0.552,29,1.218,31,1.258,32,1.793,33,1.13,37,0.862,38,0.329,39,0.972,40,1.513,42,1.513,43,1.513,44,1.826,47,1.376,48,1.5,49,1.159,50,1.152,51,0.559,52,0.542,56,1.902,58,1.152,60,1.376,62,1.639,63,1.062,64,1.806,66,1.243,67,1.376,68,2.104,69,1.736,74,0.941,75,1.03,76,1.513,77,1.266,78,1.639,79,1.383,80,1.03,81,0.941,82,1.03,83,0.941,84,0.941,85,1.03,86,0.941,92,0.874,128,1.826,129,1.536,130,3.022,131,3.54,132,2.411,133,4.538,134,2.943,135,1.376,136,1.736,137,2.411,138,2.411,139,2.411,140,2.411,141,2.004,142,2.004,143,4.196,144,4.196,145,2.004,146,2.004,147,2.411,148,2.411,149,2.411,150,2.004,151,2.411,152,2.004,153,2.411,154,2.004,155,2.411,156,1.736,157,2.411,158,1.736,159,2.411,160,2.411,161,2.411,162,2.411,163,2.943,164,2.411,165,2.004,166,2.411,167,2.411,168,1.536,169,2.004,170,2.004,171,2.411,172,2.411,173,2.411]],["title/interfaces/GRPCHealthService.html",[87,1.024,174,2.252]],["body/interfaces/GRPCHealthService.html",[3,0.326,4,0.326,7,0.507,19,0.023,20,0.028,21,0.031,22,0.023,26,0.961,38,0.573,39,1.414,49,1.375,50,1.153,51,0.507,52,0.643,63,1.259,66,2.166,78,1.64,87,1.375,89,1.64,92,1.073,129,2.676,130,3.71,156,3.025,170,3.491,174,3.025,175,4.199,176,4.199,177,5.152,178,4.199]],["title/classes/HealthIndicator.html",[0,1.221,37,1.118]],["body/classes/HealthIndicator.html",[0,1.619,2,1.552,3,0.234,4,0.234,7,0.501,16,0.826,18,0.826,19,0.027,20,0.022,21,0.034,22,0.016,26,0.689,29,1.086,31,0.903,37,1.827,38,0.411,39,1.138,42,1.771,43,1.771,48,1.696,49,0.985,50,0.826,51,0.573,52,0.461,56,1.696,63,1.243,64,1.852,68,2.184,75,1.286,76,2.184,77,1.482,78,1.852,79,1.619,80,1.286,81,1.175,82,1.286,83,1.175,84,1.175,85,1.286,86,1.175,92,0.627,107,2.986,109,1.552,135,2.708,163,2.502,179,2.502,180,2.502,181,2.167,182,2.502,183,3.009,184,3.009,185,3.009,186,3.009,187,3.009,188,3.009,189,3.009,190,3.009,191,2.502,192,3.009,193,2.167,194,3.447,195,3.009,196,3.009]],["title/injectables/MemoryHealthIndicator.html",[23,1.221,197,1.613]],["body/injectables/MemoryHealthIndicator.html",[3,0.196,4,0.196,7,0.57,16,0.691,18,1.18,19,0.03,20,0.02,21,0.032,22,0.014,25,0.983,26,0.576,28,1.179,29,1.08,31,1.29,32,1.837,33,1.179,37,0.9,38,0.344,39,1.003,40,2.016,42,1.561,43,1.561,48,1.687,49,1.408,50,1.18,51,0.606,52,0.658,56,1.869,63,1.503,64,1.957,68,2.304,74,1.427,75,1.075,76,1.561,77,1.306,78,1.68,79,1.427,80,1.075,81,0.983,82,1.075,83,0.983,84,0.983,85,1.075,86,0.983,92,0.761,97,3.007,105,1.812,106,2.092,107,1.812,108,2.092,109,2.434,120,3.923,193,2.631,197,1.884,198,2.092,199,3.653,200,3.653,201,3.653,202,2.516,203,3.653,204,2.516,205,2.631,206,3.037,207,1.812,208,2.631,209,3.653,210,2.516,211,3.653,212,2.516,213,3.653,214,2.516,215,2.516,216,2.516]],["title/injectables/MicroserviceHealthIndicator.html",[23,1.221,217,1.613]],["body/injectables/MicroserviceHealthIndicator.html",[3,0.229,4,0.229,7,0.567,16,0.809,18,1.122,19,0.029,20,0.022,21,0.032,22,0.016,25,1.151,26,0.675,29,1.218,30,1.52,31,1.407,32,1.746,33,1.381,37,1.054,38,0.403,39,1.122,40,1.746,41,2.604,42,1.746,43,1.746,44,2.108,47,1.683,48,1.677,49,1.338,50,1.122,51,0.612,52,0.626,55,1.878,56,1.811,58,1.391,60,1.683,63,1.226,64,1.978,68,2.274,74,1.151,75,1.259,76,1.746,77,1.461,78,1.832,79,1.596,80,1.259,81,1.151,82,1.259,83,1.151,84,1.151,85,1.259,86,1.151,135,1.683,217,2.108,218,2.123,219,2.948,220,3.398,221,4.087,222,2.948,223,2.948,224,2.948,225,2.948,226,2.948,227,2.948,228,2.948]],["title/injectables/MongooseHealthIndicator.html",[23,1.221,229,1.613]],["body/injectables/MongooseHealthIndicator.html",[3,0.217,4,0.217,7,0.598,16,0.767,18,1.081,19,0.03,20,0.021,21,0.032,22,0.015,25,1.091,26,0.64,28,1.309,29,1.133,30,1.441,31,1.367,32,1.682,33,1.309,37,0.999,38,0.382,39,1.081,40,1.682,41,2.509,42,1.682,43,1.682,44,1.441,47,1.596,48,1.408,49,1.493,50,1.251,51,0.63,52,0.698,55,1.781,56,1.769,58,1.251,62,1.091,63,1.367,64,2.038,65,2.013,66,2.031,67,1.596,68,2.229,74,1.091,75,1.194,76,1.682,77,1.408,78,1.78,79,1.538,80,1.194,81,1.091,82,1.194,83,1.091,84,1.091,85,1.194,86,1.091,91,1.441,109,2.031,229,2.352,230,2.013,231,2.794,232,2.323,233,3.79,234,2.013,235,0.767,236,2.013,237,2.509,238,2.323,239,2.323,240,2.323,241,2.794,242,2.323]],["title/interfaces/MongoosePingCheckSettings.html",[87,1.024,237,1.993]],["body/interfaces/MongoosePingCheckSettings.html",[3,0.322,4,0.322,11,3.684,19,0.022,20,0.027,21,0.031,22,0.022,26,0.947,38,0.565,51,0.617,52,0.885,62,2.162,89,1.616,91,2.135,92,1.063,94,2.634,96,2.637,97,3.254,98,2.981,99,2.637,100,2.981,101,2.981,230,2.981,237,2.637]],["title/classes/StorageExceededError.html",[0,1.221,243,2.252]],["body/classes/StorageExceededError.html",[2,2.325,3,0.35,4,0.35,7,0.545,8,2.872,9,2.325,10,2.872,16,1.237,17,2.872,18,1.237,19,0.024,20,0.029,21,0.029,22,0.024,60,2.574,105,3.246,114,3.747,115,3.747,243,3.246,244,3.747,245,3.747]],["title/injectables/TerminusBootstrapService.html",[23,1.221,246,2.252]],["body/injectables/TerminusBootstrapService.html",[3,0.275,4,0.275,7,0.428,9,2.386,14,2.551,19,0.019,20,0.025,21,0.03,22,0.019,25,1.383,29,1.059,30,1.827,38,0.484,39,1.27,44,1.827,49,1.16,50,0.972,51,0.428,52,0.542,58,1.27,63,1.545,92,0.738,109,2.817,136,2.551,235,0.972,246,2.551,247,2.945,248,2.945,249,2.945,250,3.542,251,2.945,252,2.212,253,2.945,254,4.625,255,5.15,256,5.15,257,3.542,258,2.167,259,4.625,260,4.625,261,5.46,262,3.542,263,3.542,264,3.542,265,3.542,266,3.542]],["title/interfaces/TerminusEndpoint.html",[87,1.024,267,1.993]],["body/interfaces/TerminusEndpoint.html",[3,0.295,4,0.295,7,0.458,19,0.02,20,0.026,21,0.032,22,0.02,29,1.282,32,1.62,38,0.518,51,0.643,52,0.74,56,1.728,57,3.688,77,1.728,89,1.481,92,1.006,94,2.493,96,2.417,181,2.731,235,1.041,267,2.417,268,1.956,269,1.956,270,3.153,271,4.833,272,4.423,273,4.423,274,4.018,275,3.153,276,3.153,277,2.731]],["title/modules/TerminusModule.html",[235,0.858,278,1.993]],["body/modules/TerminusModule.html",[3,0.191,4,0.191,7,0.513,19,0.013,20,0.019,21,0.033,22,0.013,24,2.888,39,0.675,49,1.176,50,0.986,51,0.434,52,0.55,54,1.567,58,1.281,63,1.077,83,0.96,102,2.888,128,2.888,181,1.771,197,2.888,217,2.888,229,2.888,235,1.47,249,2.044,252,1.939,258,1.683,278,3.963,279,1.771,280,1.268,281,2.044,282,2.044,283,2.986,284,2.587,285,2.986,286,2.044,287,2.044,288,2.044,289,2.624,290,2.986,291,2.044,292,1.771,293,2.459,294,2.459,295,1.771,296,2.459,297,3.592,298,2.459,299,2.459,300,2.459,301,3.592,302,2.459,303,2.459,304,2.289,305,2.459]],["title/interfaces/TerminusModuleAsyncOptions.html",[87,1.024,304,1.993]],["body/interfaces/TerminusModuleAsyncOptions.html",[0,1.236,3,0.246,4,0.246,7,0.382,16,0.869,19,0.017,20,0.023,21,0.033,22,0.017,31,1.287,38,0.432,50,1.433,51,0.732,52,0.918,56,1.866,58,1.336,89,1.236,94,2.213,168,3.326,182,3.567,235,1.433,252,1.901,268,1.632,269,1.632,284,3.09,304,2.017,306,3.164,307,3.164,308,3.164,309,3.164,310,4.047,311,4.869,312,4.869,313,4.047,314,4.291,315,3.164,316,3.567,317,2.631,318,2.631,319,2.631]],["title/interfaces/TerminusModuleOptions.html",[87,1.024,258,1.465]],["body/interfaces/TerminusModuleOptions.html",[3,0.304,4,0.304,7,0.473,19,0.021,20,0.026,21,0.031,22,0.021,29,0.896,38,0.534,51,0.652,52,0.867,57,2.493,58,1.074,77,1.762,89,1.528,94,2.543,235,1.353,252,1.528,258,1.833,267,3.142,268,2.018,269,2.018,273,4.488,275,3.253,276,3.253,277,2.818,320,4.711,321,4.488,322,3.913,323,4.099]],["title/interfaces/TerminusOptionsFactory.html",[87,1.024,324,2.252]],["body/interfaces/TerminusOptionsFactory.html",[3,0.331,4,0.331,7,0.515,19,0.023,20,0.028,21,0.031,22,0.023,38,0.582,39,1.427,58,1.427,63,1.559,74,1.664,87,1.395,89,1.664,168,2.716,235,1.17,252,2.03,258,1.997,268,2.198,269,2.198,319,3.543,324,3.07,325,3.543,326,5.609]],["title/classes/TimeoutError.html",[0,1.221,327,2.252]],["body/classes/TimeoutError.html",[2,2.337,3,0.352,4,0.352,7,0.548,9,2.337,10,2.888,16,1.244,17,2.888,18,1.244,19,0.024,20,0.029,21,0.029,22,0.024,29,1.037,62,1.77,92,0.944,327,3.264,328,3.767,329,3.767,330,4.531]],["title/injectables/TypeOrmHealthIndicator.html",[23,1.221,289,1.465]],["body/injectables/TypeOrmHealthIndicator.html",[3,0.219,4,0.219,7,0.601,16,0.775,18,1.088,19,0.03,20,0.021,21,0.032,22,0.015,25,1.102,26,0.646,28,1.322,29,1.138,30,1.456,31,1.375,32,1.694,33,1.322,37,1.009,38,0.385,39,1.088,40,1.694,41,2.526,42,1.694,43,1.694,44,1.456,47,1.611,48,1.417,49,1.501,50,1.258,51,0.633,52,0.702,55,1.798,56,1.777,58,1.258,62,1.102,63,1.375,64,2.045,65,2.032,66,2.045,67,1.611,68,2.238,74,1.102,75,1.206,76,1.694,77,1.417,78,1.79,79,1.548,80,1.206,81,1.102,82,1.206,83,1.102,84,1.102,85,1.206,86,1.102,91,1.456,232,2.346,233,3.81,234,2.032,235,0.775,236,2.032,239,2.346,240,2.346,242,2.346,289,2.148,331,2.032,332,2.346,333,2.526,334,2.822]],["title/interfaces/TypeOrmPingCheckSettings.html",[87,1.024,333,1.993]],["body/interfaces/TypeOrmPingCheckSettings.html",[3,0.319,4,0.319,11,3.845,19,0.022,20,0.027,21,0.031,22,0.022,26,0.938,38,0.56,51,0.613,52,0.882,62,2.153,89,1.601,91,2.115,92,1.057,94,2.618,96,2.612,97,3.235,98,2.952,99,2.612,100,2.952,101,2.952,331,2.952,333,2.612]],["title/classes/UnhealthyResponseCodeError.html",[0,1.221,335,2.252]],["body/classes/UnhealthyResponseCodeError.html",[2,2.277,3,0.343,4,0.343,7,0.533,8,2.813,9,2.277,10,2.813,16,1.212,17,2.813,18,1.212,19,0.024,20,0.029,21,0.029,22,0.024,252,1.724,335,3.18,336,3.67,337,3.825,338,3.67,339,4.415,340,4.415,341,4.415,342,3.67,343,3.67]],["title/contributing.html",[344,1.885,345,2.175,346,2.175]],["body/contributing.html",[3,0.068,4,0.068,7,0.105,9,0.45,13,1.283,18,0.569,19,0.005,20,0.008,21,0.024,22,0.005,28,0.409,31,0.463,35,2.083,39,0.24,50,0.24,51,0.186,52,0.236,54,2.016,69,2.762,74,0.341,84,0.341,92,0.182,99,0.983,109,0.796,124,0.725,136,1.111,142,0.725,145,3.455,150,0.725,152,0.725,154,0.725,156,0.628,165,2.083,194,3.188,205,1.111,206,0.725,207,2.062,208,1.494,234,1.111,236,1.111,251,0.725,270,2.083,277,0.628,280,0.45,292,1.494,316,0.725,318,0.725,342,3.33,344,0.628,346,0.725,347,0.873,348,0.873,349,2.863,350,1.725,351,2.074,352,2.863,353,0.873,354,1.543,355,0.725,356,3.164,357,2.863,358,1.543,359,2.863,360,2.074,361,3.42,362,2.074,363,4.005,364,2.074,365,2.074,366,2.863,367,4.938,368,2.074,369,2.083,370,0.873,371,2.63,372,1.283,373,0.873,374,1.543,375,1.111,376,2.863,377,1.725,378,4.156,379,3.42,380,0.873,381,0.873,382,1.543,383,0.873,384,0.873,385,2.506,386,2.074,387,0.873,388,0.873,389,1.543,390,1.543,391,1.543,392,0.725,393,1.725,394,0.873,395,0.873,396,0.873,397,0.873,398,0.873,399,1.543,400,0.873,401,0.873,402,0.873,403,0.725,404,1.543,405,1.543,406,0.873,407,0.873,408,0.873,409,0.873,410,0.873,411,0.873,412,0.873,413,0.873,414,0.725,415,1.283,416,2.506,417,4.29,418,2.38,419,2.506,420,4.156,421,3.642,422,2.074,423,2.63,424,2.074,425,1.543,426,2.074,427,0.725,428,1.543,429,0.873,430,0.873,431,0.873,432,0.873,433,0.873,434,0.873,435,0.873,436,0.873,437,0.873,438,0.873,439,0.873,440,1.543,441,1.283,442,2.074,443,0.873,444,0.873,445,1.543,446,0.873,447,0.873,448,0.873,449,2.506,450,1.543,451,0.873,452,0.873,453,0.873,454,0.873,455,0.873,456,0.873,457,0.873,458,0.873,459,0.873,460,0.873,461,1.543,462,0.873,463,0.725,464,1.543,465,1.543,466,1.543,467,0.873,468,0.873,469,0.873,470,0.873,471,0.873,472,0.873,473,0.873,474,1.283,475,1.543,476,1.543,477,1.543,478,0.873,479,2.074,480,0.873,481,0.873,482,0.873,483,0.873,484,0.725,485,0.873,486,0.873,487,0.873,488,2.506,489,0.873,490,0.873,491,0.873,492,0.873,493,0.873,494,2.074,495,1.283,496,0.873,497,0.873,498,0.873,499,0.873,500,0.873,501,0.873,502,0.873,503,4.411,504,4.411,505,4.29,506,1.543,507,0.873,508,3.164,509,0.873,510,0.873,511,0.873,512,0.873,513,2.506,514,0.725,515,1.283,516,0.873,517,0.873,518,0.873,519,1.111,520,2.074,521,2.863,522,0.873,523,0.873,524,1.543,525,1.543,526,0.873,527,0.873,528,0.873,529,0.873,530,1.543,531,0.873,532,2.083,533,0.873,534,0.873,535,1.543,536,0.725,537,0.873,538,0.873,539,0.873,540,1.543,541,2.863,542,1.543,543,0.873,544,0.873,545,0.873,546,0.725,547,0.873,548,0.873,549,0.873,550,0.873,551,1.543,552,0.873,553,2.074,554,1.543,555,0.873,556,0.873,557,0.873,558,1.543,559,0.873,560,2.506,561,0.873,562,2.074,563,0.873,564,2.074,565,0.873,566,0.873,567,1.543,568,0.873,569,0.873,570,2.074,571,0.873,572,0.873,573,0.873,574,0.873,575,0.873,576,1.543,577,0.873,578,0.873,579,0.873,580,0.873,581,0.873,582,0.873,583,0.873,584,0.873,585,1.543,586,0.873,587,0.873,588,1.283,589,1.543,590,0.873,591,0.873,592,0.725,593,0.873,594,0.873,595,0.873,596,0.873,597,0.873,598,0.873,599,0.873,600,0.873,601,0.873,602,0.873,603,0.873,604,1.283,605,1.543,606,0.873,607,0.873,608,2.863,609,2.506,610,2.506,611,0.873,612,0.873,613,1.543,614,2.506,615,0.873,616,0.873,617,0.873,618,0.873,619,0.873,620,0.873,621,0.873,622,1.543,623,0.873,624,1.283,625,0.873,626,0.873,627,0.873,628,0.725,629,0.873,630,0.873,631,0.873,632,0.873,633,0.873,634,0.873,635,1.543,636,1.543,637,0.873,638,0.873,639,0.873,640,1.543,641,0.873,642,0.873,643,0.873,644,1.543,645,1.543,646,0.873,647,1.543,648,0.873,649,0.873,650,0.725,651,1.543,652,0.873,653,0.873,654,0.873,655,0.873,656,0.873,657,0.725,658,0.873,659,0.873,660,0.873,661,0.873,662,0.873,663,0.873,664,0.873,665,0.873,666,0.873,667,0.873,668,0.873,669,0.873,670,0.873,671,0.873,672,0.873,673,1.543,674,1.543,675,1.543,676,1.543,677,0.873,678,0.873,679,0.873,680,0.873,681,0.873,682,0.873,683,0.873,684,0.873,685,2.074,686,0.873,687,0.873,688,0.873,689,0.873,690,0.873,691,0.873,692,0.873,693,0.873,694,0.873,695,0.873,696,2.863,697,1.543,698,0.725,699,0.873,700,0.873,701,0.873,702,0.873,703,0.873,704,0.873,705,0.873,706,0.873,707,0.873,708,0.873,709,0.873,710,0.873,711,0.873,712,0.873,713,0.873,714,0.873]],["title/coverage.html",[715,3.538]],["body/coverage.html",[0,1.948,1,1.791,4,0.193,5,2.068,6,2.068,19,0.013,20,0.019,21,0.033,22,0.013,23,2.151,24,1.283,26,1.351,27,2.068,37,0.889,51,0.301,87,1.803,88,1.791,90,2.068,91,1.283,92,0.518,93,2.068,102,1.283,103,1.791,123,2.068,128,1.283,129,2.308,174,1.791,179,2.068,180,2.068,197,1.283,198,2.068,217,1.283,218,1.791,229,1.283,230,2.609,235,1.288,237,1.585,243,1.791,244,2.068,245,2.068,246,1.791,247,2.068,248,2.068,258,1.166,267,1.585,268,2.421,269,2.421,289,1.166,304,1.585,324,1.791,327,1.791,328,2.068,329,2.068,331,2.609,333,1.585,335,1.791,336,2.068,337,1.791,338,2.068,423,2.068,519,1.791,588,5.013,715,2.068,716,2.487,717,2.487,718,4.988,719,2.068,720,2.487,721,2.068,722,4.272,723,4.272,724,5.374,725,2.487,726,3.622,727,2.487,728,2.487,729,3.622,730,3.622,731,2.487,732,2.487]],["title/dependencies.html",[158,1.885,280,1.938]],["body/dependencies.html",[19,0.023,20,0.028,21,0.034,22,0.023,92,0.905,104,3.132,205,3.132,280,2.714,295,3.132,628,3.615,733,4.348,734,4.348,735,4.348,736,4.348,737,5.659,738,4.348,739,4.348,740,4.348,741,4.348]],["title/index.html",[38,0.357,344,1.885,345,2.175]],["body/index.html",[0,0.832,3,0.166,7,0.257,8,1.357,15,1.771,19,0.011,20,0.017,21,0.034,22,0.011,28,0.998,29,1.07,31,0.639,40,0.91,48,0.761,52,0.597,53,1.771,54,2.484,57,1.357,58,0.585,62,1.261,92,0.444,130,1.534,135,1.843,141,1.771,146,1.771,158,1.534,191,1.771,193,2.325,207,1.534,208,2.807,235,1.194,238,1.771,252,1.261,253,1.771,258,0.998,272,1.771,280,1.099,289,1.826,295,2.325,310,2.684,313,1.771,317,1.771,320,1.771,332,1.771,337,1.534,343,1.771,350,1.771,355,1.771,369,1.771,371,1.771,372,1.771,375,2.325,377,1.771,392,1.771,393,2.684,403,1.771,414,1.771,415,1.771,418,1.771,427,1.771,441,1.771,463,1.771,474,1.771,484,1.771,495,1.771,514,1.771,515,1.771,519,1.534,536,1.771,546,2.684,592,1.771,624,2.684,650,1.771,657,1.771,698,1.771,742,2.13,743,2.13,744,2.13,745,2.13,746,2.13,747,2.13,748,2.13,749,2.13,750,2.13,751,2.13,752,2.13,753,2.13,754,3.898,755,3.228,756,2.13,757,2.13,758,2.13,759,2.13,760,4.918,761,4.674,762,2.13,763,2.13,764,2.13,765,2.13,766,2.13,767,2.13,768,2.13,769,2.13,770,2.13,771,2.13,772,2.13,773,2.13,774,2.13,775,3.228,776,2.13,777,2.13,778,2.13,779,2.13,780,3.228,781,3.228,782,2.13,783,2.13,784,3.228,785,2.13,786,3.228,787,2.13,788,2.13,789,2.13,790,2.13,791,2.13,792,2.13,793,2.13,794,2.13,795,2.13,796,2.13,797,2.13,798,2.13,799,2.13,800,2.13,801,2.13,802,2.13,803,3.228,804,3.228,805,2.13,806,2.13,807,2.13,808,2.13,809,2.13,810,2.13,811,2.13,812,2.13,813,2.13,814,2.13,815,2.13,816,2.13,817,2.13,818,2.13,819,2.13,820,2.13,821,2.13]],["title/modules.html",[279,3.066]],["body/modules.html",[19,0.026,20,0.03,21,0.03,22,0.026,278,3.048,279,3.445,375,3.445,822,4.783,823,4.783,824,4.783]],["title/overview.html",[825,3.538]],["body/overview.html",[2,1.569,19,0.016,20,0.022,21,0.033,22,0.016,24,2.937,25,1.188,89,1.188,102,2.937,128,2.937,197,2.937,217,2.937,229,2.937,235,1.146,278,4.037,280,1.569,281,2.528,282,2.528,283,2.528,284,2.19,285,2.528,286,2.528,287,2.528,288,2.528,289,2.668,290,3.472,291,2.528,292,2.19,825,2.528,826,3.041,827,4.176,828,3.041]],["title/miscellaneous/typealiases.html",[829,1.668,830,3.758]],["body/miscellaneous/typealiases.html",[14,2.238,19,0.023,20,0.023,21,0.031,22,0.017,26,1.186,29,1.311,31,0.932,38,0.424,48,1.852,51,0.512,58,1.324,64,1.213,79,1.213,81,1.213,86,1.655,92,0.882,103,2.238,104,2.238,112,3.523,129,1.98,133,2.583,134,3.523,135,1.774,168,3.566,169,3.523,218,2.238,220,3.523,235,1.163,252,1.213,268,1.603,269,2.186,274,3.523,321,2.583,323,3.523,532,2.583,604,2.583,829,1.98,831,3.107,832,4.238,833,3.107,834,4.238,835,4.238,836,4.238,837,3.107,838,4.238,839,3.523,840,4.823,841,3.107,842,3.107,843,3.107,844,3.107,845,3.107,846,3.107,847,3.107,848,3.107,849,3.107,850,3.107,851,3.107,852,3.107,853,3.107,854,3.107,855,3.107]],["title/miscellaneous/variables.html",[829,1.668,856,3.124]],["body/miscellaneous/variables.html",[19,0.023,20,0.028,21,0.033,22,0.023,24,2.188,26,0.971,29,0.971,30,2.188,38,0.579,51,0.626,66,2.188,67,2.421,102,2.188,128,2.188,197,2.188,217,2.188,229,2.188,252,1.656,289,1.987,325,3.526,719,4.309,721,4.309,829,2.702,839,3.526,856,3.526,857,4.241]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":126,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["1",{"_index":826,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":588,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["1000ms",{"_index":240,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["1024",{"_index":120,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{}}}],["150",{"_index":211,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["1500",{"_index":242,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["150mb",{"_index":209,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["2.1.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":117,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["3/3",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":146,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"index.html":{}}}],["3001",{"_index":228,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["300ms",{"_index":787,"title":{},"body":{"index.html":{}}}],["39;./protos/my",{"_index":162,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["39;/&#39",{"_index":122,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["39;c:\\&#39",{"_index":127,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["39;grpc.health.v2&#39",{"_index":159,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["39;health&#39",{"_index":167,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["39;hero.health.v1&#39",{"_index":144,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["39;https://google.com&#39",{"_index":72,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["39;localhost&#39",{"_index":226,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["3rd",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["4.2.0",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":828,"title":{},"body":{"overview.html":{}}}],["50",{"_index":123,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"coverage.html":{}}}],["500",{"_index":157,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["6.0.0",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":827,"title":{},"body":{"overview.html":{}}}],["800",{"_index":73,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["abstract",{"_index":182,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusModuleAsyncOptions.html":{}}}],["accepted",{"_index":440,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":798,"title":{},"body":{"index.html":{}}}],["according",{"_index":175,"title":{},"body":{"interfaces/GRPCHealthService.html":{}}}],["actual",{"_index":190,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["actually",{"_index":778,"title":{},"body":{"index.html":{}}}],["add",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["adding",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":84,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["adds",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["adherence",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["agreement",{"_index":699,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":215,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["allow",{"_index":433,"title":{},"body":{"contributing.html":{}}}],["allows",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["already",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":808,"title":{},"body":{"index.html":{}}}],["amount",{"_index":98,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["angular",{"_index":752,"title":{},"body":{"index.html":{}}}],["answer",{"_index":395,"title":{},"body":{"contributing.html":{}}}],["answered",{"_index":384,"title":{},"body":{"contributing.html":{}}}],["answers",{"_index":391,"title":{},"body":{"contributing.html":{}}}],["api",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["appended",{"_index":85,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["application",{"_index":14,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/typealiases.html":{}}}],["applicationconfig",{"_index":261,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["applications",{"_index":749,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":512,"title":{},"body":{"contributing.html":{}}}],["array",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ask",{"_index":390,"title":{},"body":{"contributing.html":{}}}],["assures",{"_index":400,"title":{},"body":{"contributing.html":{}}}],["async",{"_index":40,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"index.html":{}}}],["asynchronous",{"_index":307,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["asynchronously",{"_index":305,"title":{},"body":{"modules/TerminusModule.html":{}}}],["author",{"_index":813,"title":{},"body":{"index.html":{}}}],["automated",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["automatically",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["available",{"_index":393,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["axios",{"_index":70,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrequestconfig",{"_index":59,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["b",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["back",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["backers",{"_index":809,"title":{},"body":{"index.html":{}}}],["based",{"_index":758,"title":{},"body":{"index.html":{}}}],["before",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":684,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":152,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["beta.5bugfix(@nestjs/core",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":352,"title":{},"body":{"contributing.html":{}}}],["body",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["bootstrap",{"_index":283,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["bootstrap.service.ts",{"_index":248,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["bootstrapped",{"_index":265,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstraps",{"_index":249,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{}}}],["branch",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["breaking",{"_index":685,"title":{},"body":{"contributing.html":{}}}],["broccoli",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":824,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":822,"title":{},"body":{"modules.html":{}}}],["browserstack",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["brunner",{"_index":817,"title":{},"body":{"index.html":{}}}],["bug",{"_index":379,"title":{},"body":{"contributing.html":{}}}],["bugfix",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":362,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":745,"title":{},"body":{"index.html":{}}}],["called",{"_index":264,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["capitalize",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["case",{"_index":484,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["cases",{"_index":514,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["chances",{"_index":383,"title":{},"body":{"contributing.html":{}}}],["change",{"_index":145,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["changed",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["changes",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["channel",{"_index":413,"title":{},"body":{"contributing.html":{}}}],["characters",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["chat",{"_index":408,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":92,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"classes/TimeoutError.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["check(data",{"_index":176,"title":{},"body":{"interfaces/GRPCHealthService.html":{}}}],["check(key",{"_index":188,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["checkdiskspace",{"_index":832,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["checked",{"_index":141,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"index.html":{}}}],["checkgrpcserviceoptions",{"_index":134,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["checkheap",{"_index":200,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["checkheap(key",{"_index":202,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["checking.md",{"_index":140,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["checkout",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["checkrss",{"_index":201,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["checkrss(key",{"_index":212,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["checks",{"_index":32,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["checkservice",{"_index":131,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["checkservice(key",{"_index":132,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["checkstorage",{"_index":110,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["checkstorage(key",{"_index":111,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["ci",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["circle",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["cla",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":0,"title":{"classes/ConnectionNotFoundError.html":{},"classes/HealthIndicator.html":{},"classes/StorageExceededError.html":{},"classes/TimeoutError.html":{},"classes/UnhealthyResponseCodeError.html":{}},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"classes/HealthIndicator.html":{},"classes/StorageExceededError.html":{},"classes/TimeoutError.html":{},"classes/UnhealthyResponseCodeError.html":{},"overview.html":{}}}],["click",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["client",{"_index":339,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{}}}],["clientoptions",{"_index":835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["close",{"_index":405,"title":{},"body":{"contributing.html":{}}}],["closed",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["closes",{"_index":686,"title":{},"body":{"contributing.html":{}}}],["closing",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["cluster_terminusmodule",{"_index":286,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["cluster_terminusmodule_exports",{"_index":287,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["cluster_terminusmodule_providers",{"_index":288,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["code",{"_index":342,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{}}}],["code.error.ts",{"_index":338,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{},"coverage.html":{}}}],["coding",{"_index":365,"title":{},"body":{"contributing.html":{}}}],["colons",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["command",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":367,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":183,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["conduct",{"_index":358,"title":{},"body":{"contributing.html":{}}}],["conduct][coc",{"_index":373,"title":{},"body":{"contributing.html":{}}}],["configuration",{"_index":142,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["configured",{"_index":254,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["confirm",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["connection",{"_index":11,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["connectionnotfounderror",{"_index":1,"title":{"classes/ConnectionNotFoundError.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["consider",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["consistency",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["consists",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":191,"title":{},"body":{"classes/HealthIndicator.html":{},"index.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["constructor(httpservice",{"_index":45,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(moduleref",{"_index":232,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["constructor(options",{"_index":257,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["contain",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["contains",{"_index":28,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{},"index.html":{}}}],["context",{"_index":15,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"index.html":{}}}],["contrast",{"_index":683,"title":{},"body":{"contributing.html":{}}}],["contribute",{"_index":348,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":346,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":354,"title":{},"body":{"contributing.html":{}}}],["conventions",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["cool",{"_index":765,"title":{},"body":{"index.html":{}}}],["coordinate",{"_index":434,"title":{},"body":{"contributing.html":{}}}],["copied",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["corporations",{"_index":708,"title":{},"body":{"contributing.html":{}}}],["correcting",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":797,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":65,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["coverage",{"_index":715,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craft",{"_index":438,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":446,"title":{},"body":{"contributing.html":{}}}],["create",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["createterminusoptions",{"_index":326,"title":{},"body":{"interfaces/TerminusOptionsFactory.html":{}}}],["creation",{"_index":308,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["current",{"_index":106,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{}}}],["custom",{"_index":163,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["customize",{"_index":147,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["d",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["data",{"_index":78,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["database",{"_index":781,"title":{},"body":{"index.html":{}}}],["databasepingchecksettings",{"_index":88,"title":{"interfaces/DatabasePingCheckSettings.html":{}},"body":{"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["db",{"_index":784,"title":{},"body":{"index.html":{}}}],["db.pingcheck('database",{"_index":788,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":282,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["default",{"_index":66,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["depend",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["dependencies",{"_index":280,"title":{"dependencies.html":{}},"body":{"modules/TerminusModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":775,"title":{},"body":{"index.html":{}}}],["described",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"index.html":{}}}],["descriptive",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["detailed",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["details",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["developer",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["developer.md",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["directly",{"_index":447,"title":{},"body":{"contributing.html":{}}}],["discussed",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["discussion",{"_index":442,"title":{},"body":{"contributing.html":{}}}],["disk",{"_index":104,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["diskhealthindicator",{"_index":102,"title":{"injectables/DiskHealthIndicator.html":{}},"body":{"injectables/DiskHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["diskhealthindicator.checkstorage(&#39;storage&#39",{"_index":119,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["diskhealthindicatoroptions",{"_index":112,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["dns",{"_index":36,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthindicator",{"_index":24,"title":{"injectables/DNSHealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dnshealthindicator.pingcheck(&#39;google&#39",{"_index":71,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["docs",{"_index":657,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs(changelog",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":519,"title":{},"body":{"contributing.html":{},"coverage.html":{},"index.html":{}}}],["documented",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["don't",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["dot",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["duplicate",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["duplication",{"_index":437,"title":{},"body":{"contributing.html":{}}}],["dynamicmodule",{"_index":301,"title":{},"body":{"modules/TerminusModule.html":{}}}],["each",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["easier",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["easy",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["ecosystem",{"_index":296,"title":{},"body":{"modules/TerminusModule.html":{}}}],["edited",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["efficient",{"_index":746,"title":{},"body":{"index.html":{}}}],["effort",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["efforts",{"_index":435,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["endpoint",{"_index":271,"title":{},"body":{"interfaces/TerminusEndpoint.html":{}}}],["endpoints",{"_index":320,"title":{},"body":{"interfaces/TerminusModuleOptions.html":{},"index.html":{}}}],["enough",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":8,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"classes/StorageExceededError.html":{},"classes/UnhealthyResponseCodeError.html":{},"index.html":{}}}],["error.ts",{"_index":329,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["errors",{"_index":855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["etc",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":351,"title":{},"body":{"contributing.html":{}}}],["everything",{"_index":796,"title":{},"body":{"index.html":{}}}],["example",{"_index":18,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/StorageExceededError.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{}}}],["exceed",{"_index":116,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["exceeded",{"_index":114,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"classes/StorageExceededError.html":{}}}],["exceeded.error.ts",{"_index":245,"title":{},"body":{"classes/StorageExceededError.html":{},"coverage.html":{}}}],["exceeds",{"_index":330,"title":{},"body":{"classes/TimeoutError.html":{}}}],["execute",{"_index":762,"title":{},"body":{"index.html":{}}}],["executed",{"_index":96,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["execution",{"_index":756,"title":{},"body":{"index.html":{}}}],["existing",{"_index":318,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"contributing.html":{}}}],["exists",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["explanation",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":794,"title":{},"body":{"index.html":{}}}],["exports",{"_index":285,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["extends",{"_index":16,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/StorageExceededError.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"classes/UnhealthyResponseCodeError.html":{}}}],["external",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["f",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["f$r",{"_index":306,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["factory",{"_index":319,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["fails",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["fax",{"_index":712,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":363,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":445,"title":{},"body":{"contributing.html":{}}}],["ff",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["filling",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["find",{"_index":414,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["first",{"_index":426,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":421,"title":{},"body":{"contributing.html":{}}}],["fixes",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["fixing",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":802,"title":{},"body":{"index.html":{}}}],["follow",{"_index":357,"title":{},"body":{"contributing.html":{}}}],["followed",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":495,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follows",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["footer",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["force",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["fork",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["form][corporate",{"_index":714,"title":{},"body":{"contributing.html":{}}}],["form][individual",{"_index":707,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["formatted",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["formatter",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["formatting",{"_index":666,"title":{},"body":{"contributing.html":{}}}],["forroot",{"_index":298,"title":{},"body":{"modules/TerminusModule.html":{}}}],["forroot(options",{"_index":299,"title":{},"body":{"modules/TerminusModule.html":{}}}],["forrootasync",{"_index":302,"title":{},"body":{"modules/TerminusModule.html":{}}}],["forrootasync(options",{"_index":303,"title":{},"body":{"modules/TerminusModule.html":{}}}],["forth",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":13,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"contributing.html":{}}}],["found.error.ts",{"_index":6,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["framework",{"_index":744,"title":{},"body":{"index.html":{}}}],["full",{"_index":124,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"contributing.html":{}}}],["function",{"_index":168,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["functionalities",{"_index":184,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["further",{"_index":801,"title":{},"body":{"index.html":{}}}],["gb",{"_index":118,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["general",{"_index":374,"title":{},"body":{"contributing.html":{}}}],["generate",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["generated",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["generates",{"_index":80,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["gethealthchecksmap",{"_index":255,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["gets",{"_index":9,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{}}}],["getstatus",{"_index":43,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["getstatus(key",{"_index":75,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["getterminusoptions",{"_index":783,"title":{},"body":{"index.html":{}}}],["getterminusoptions(db",{"_index":793,"title":{},"body":{"index.html":{}}}],["getting",{"_index":344,"title":{"contributing.html":{},"index.html":{}},"body":{"contributing.html":{}}}],["gist",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["git",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":378,"title":{},"body":{"contributing.html":{}}}],["gitter",{"_index":412,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":60,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"classes/StorageExceededError.html":{}}}],["gives",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["giving",{"_index":148,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["global",{"_index":276,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["godaddy/terminus",{"_index":295,"title":{},"body":{"modules/TerminusModule.html":{},"dependencies.html":{},"index.html":{}}}],["going",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["google's",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["grow",{"_index":805,"title":{},"body":{"index.html":{}}}],["grpc",{"_index":130,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"index.html":{}}}],["grpc.checkservice",{"_index":842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["grpc.checkservice(&#39;hero_service&#39",{"_index":143,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["grpchealthindicator",{"_index":128,"title":{"injectables/GRPCHealthIndicator.html":{}},"body":{"injectables/GRPCHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["grpchealthservice",{"_index":174,"title":{"interfaces/GRPCHealthService.html":{}},"body":{"interfaces/GRPCHealthService.html":{},"coverage.html":{}}}],["grpcoptions",{"_index":847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["gt",{"_index":171,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["guide",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":356,"title":{},"body":{"contributing.html":{}}}],["gulp",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["hash",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["having",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["header",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["health",{"_index":29,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["health.v1&#39",{"_index":164,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["health_indicators",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["healthcheck",{"_index":780,"title":{},"body":{"index.html":{}}}],["healthcheckerror",{"_index":17,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"classes/StorageExceededError.html":{},"classes/TimeoutError.html":{},"classes/UnhealthyResponseCodeError.html":{}}}],["healthcheckmap",{"_index":263,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckrequest",{"_index":177,"title":{},"body":{"interfaces/GRPCHealthService.html":{}}}],["healthchecks",{"_index":754,"title":{},"body":{"index.html":{}}}],["healthindicator",{"_index":37,"title":{"classes/HealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"coverage.html":{}}}],["healthindicatorfunction",{"_index":274,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"miscellaneous/typealiases.html":{}}}],["healthindicatorresult",{"_index":86,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["healthindicators",{"_index":272,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"index.html":{}}}],["healthmodule",{"_index":795,"title":{},"body":{"index.html":{}}}],["healthservice",{"_index":170,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{}}}],["healthservice.check",{"_index":172,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["healthservicecheck",{"_index":169,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["healthservicename",{"_index":166,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["healthy",{"_index":82,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["heap",{"_index":204,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["heapusedthreshold",{"_index":203,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["hear",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["heavily",{"_index":750,"title":{},"body":{"index.html":{}}}],["help",{"_index":349,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":355,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["highly",{"_index":772,"title":{},"body":{"index.html":{}}}],["history",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["host",{"_index":225,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["http",{"_index":34,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["http://localhost:3000/health",{"_index":799,"title":{},"body":{"index.html":{}}}],["httpadapterhost",{"_index":260,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["https://github.com/grpc/grpc/blob/master/doc/health",{"_index":139,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["https://nestjs.com",{"_index":819,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":46,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["idea",{"_index":443,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["imperative",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":154,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["import",{"_index":317,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"index.html":{}}}],["important",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["importantly",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["imports",{"_index":789,"title":{},"body":{"index.html":{}}}],["improves",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["includes",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["inclusive",{"_index":370,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":48,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.interface.ts",{"_index":840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["indicator.ts",{"_index":180,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicators",{"_index":30,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/variables.html":{}}}],["indicators.provider.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indicators/database/databse",{"_index":90,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["indicators/database/mongoose.health.ts",{"_index":230,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"coverage.html":{}}}],["indicators/database/typeorm.health.ts",{"_index":331,"title":{},"body":{"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"coverage.html":{}}}],["indicators/disk/disk",{"_index":851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["indicators/disk/disk.health.ts",{"_index":103,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["indicators/dns/dns.health.ts",{"_index":27,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"coverage.html":{}}}],["indicators/health",{"_index":179,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicators/memory/memory.health.ts",{"_index":198,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{},"coverage.html":{}}}],["indicators/microservice/grpc.health.ts",{"_index":129,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["indicators/microservice/microservice.health.ts",{"_index":218,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["individuals",{"_index":704,"title":{},"body":{"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"index.html":{}}}],["inform",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["information",{"_index":474,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["inherit",{"_index":185,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["inidcator",{"_index":782,"title":{},"body":{"index.html":{}}}],["initializes",{"_index":47,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["inject",{"_index":310,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"index.html":{}}}],["injectable",{"_index":23,"title":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"injectables/TypeOrmHealthIndicator.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":25,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"injectables/TypeOrmHealthIndicator.html":{},"overview.html":{}}}],["injected",{"_index":315,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["inside",{"_index":854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inspired",{"_index":751,"title":{},"body":{"index.html":{}}}],["install",{"_index":760,"title":{},"body":{"index.html":{}}}],["installation",{"_index":759,"title":{},"body":{"index.html":{}}}],["instance",{"_index":12,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["integrated",{"_index":753,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":763,"title":{},"body":{"index.html":{}}}],["integration",{"_index":294,"title":{},"body":{"modules/TerminusModule.html":{}}}],["integrations",{"_index":770,"title":{},"body":{"index.html":{}}}],["interface",{"_index":87,"title":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/GRPCHealthService.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}},"body":{"interfaces/GRPCHealthService.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/GRPCHealthService.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"overview.html":{}}}],["internal",{"_index":755,"title":{},"body":{"index.html":{}}}],["investigate",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["ishealthy",{"_index":76,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["issue",{"_index":417,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":361,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":702,"title":{},"body":{"contributing.html":{}}}],["javascript",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["join",{"_index":811,"title":{},"body":{"index.html":{}}}],["join(__dirname",{"_index":161,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["kamil",{"_index":814,"title":{},"body":{"index.html":{}}}],["keep",{"_index":368,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":68,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["kind",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["leads",{"_index":598,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":281,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["letter",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["lib/.../disk",{"_index":837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../disk.health.ts",{"_index":833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../grpc.health.ts",{"_index":834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../health",{"_index":839,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../microservice.health.ts",{"_index":836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../terminus",{"_index":841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/errors/connection",{"_index":5,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["lib/errors/storage",{"_index":244,"title":{},"body":{"classes/StorageExceededError.html":{},"coverage.html":{}}}],["lib/errors/timeout",{"_index":328,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["lib/errors/unhealthy",{"_index":336,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{},"coverage.html":{}}}],["lib/health",{"_index":26,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/interfaces/health",{"_index":853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/interfaces/terminus",{"_index":268,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["lib/terminus",{"_index":247,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["lib/terminus.module.ts",{"_index":293,"title":{},"body":{"modules/TerminusModule.html":{}}}],["libraries",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["library",{"_index":253,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["license",{"_index":698,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["licensed",{"_index":804,"title":{},"body":{"index.html":{}}}],["line",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":322,"title":{},"body":{"interfaces/TerminusModuleOptions.html":{}}}],["literal",{"_index":79,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["livio",{"_index":816,"title":{},"body":{"index.html":{}}}],["local",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":604,"title":{},"body":{"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["logger",{"_index":321,"title":{},"body":{"interfaces/TerminusModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["longer",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["looking",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":764,"title":{},"body":{"index.html":{}}}],["love",{"_index":347,"title":{},"body":{"contributing.html":{}}}],["machine",{"_index":108,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{}}}],["mail",{"_index":713,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":430,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":350,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["manager",{"_index":757,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["many",{"_index":768,"title":{},"body":{"index.html":{}}}],["map",{"_index":262,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["master",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["matching",{"_index":20,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["meaning",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["memory",{"_index":199,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["memoryhealthindicator",{"_index":197,"title":{"injectables/MemoryHealthIndicator.html":{}},"body":{"injectables/MemoryHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memoryhealthindicator.checkrss(&#39;memory_heap&#39",{"_index":210,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["memoryhealthindicator.checkrss(&#39;memory_rss&#39",{"_index":216,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["merged",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["message",{"_index":194,"title":{},"body":{"classes/HealthIndicator.html":{},"contributing.html":{}}}],["messages",{"_index":532,"title":{},"body":{"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":39,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["microservice",{"_index":221,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["microservice.pingcheck(&#39;tcp&#39",{"_index":222,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["microservicehealthindicator",{"_index":217,"title":{"injectables/MicroserviceHealthIndicator.html":{}},"body":{"injectables/MicroserviceHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["microservicehealthindicatoroptions",{"_index":220,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["microservicehealthinidcator",{"_index":850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["microservices",{"_index":219,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["mind",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["minimal",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["miscellaneous",{"_index":829,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":774,"title":{},"body":{"index.html":{}}}],["missing",{"_index":422,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":803,"title":{},"body":{"index.html":{}}}],["module",{"_index":235,"title":{"modules/TerminusModule.html":{}},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["moduleref",{"_index":233,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["modules",{"_index":279,"title":{"modules.html":{}},"body":{"modules/TerminusModule.html":{},"modules.html":{}}}],["mongodb",{"_index":238,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"index.html":{}}}],["mongoose",{"_index":231,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["mongooseconnection",{"_index":95,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{}}}],["mongoosehealthindicator",{"_index":229,"title":{"injectables/MongooseHealthIndicator.html":{}},"body":{"injectables/MongooseHealthIndicator.html":{},"modules/TerminusModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongoosehealthindicator.pingcheck(&#39;mongodb&#39",{"_index":241,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["mongoosepingchecksettings",{"_index":237,"title":{"interfaces/MongoosePingCheckSettings.html":{}},"body":{"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"coverage.html":{}}}],["more",{"_index":208,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{},"contributing.html":{},"index.html":{}}}],["motivation",{"_index":682,"title":{},"body":{"contributing.html":{}}}],["mqttoptions",{"_index":846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ms",{"_index":101,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["much",{"_index":382,"title":{},"body":{"contributing.html":{}}}],["myhealthindicator",{"_index":187,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["myśliwiec",{"_index":815,"title":{},"body":{"index.html":{}}}],["name",{"_index":50,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["natsoptions",{"_index":845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["necessary",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":165,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["needed",{"_index":769,"title":{},"body":{"index.html":{}}}],["nest",{"_index":54,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusModule.html":{},"contributing.html":{},"index.html":{}}}],["nestframework",{"_index":821,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":234,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["nestjs/common",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["nestjs/nest",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["nestjs/terminus",{"_index":761,"title":{},"body":{"index.html":{}}}],["nestjs:master",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":423,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["newlines",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["node.js",{"_index":743,"title":{},"body":{"index.html":{}}}],["nonetheless",{"_index":149,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["note",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["notes",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["npm",{"_index":650,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["number",{"_index":97,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/MemoryHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["object",{"_index":64,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["observable",{"_index":178,"title":{},"body":{"interfaces/GRPCHealthService.html":{}}}],["ok",{"_index":800,"title":{},"body":{"index.html":{}}}],["onapplicationbootstrap",{"_index":256,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["one",{"_index":270,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"contributing.html":{}}}],["open",{"_index":369,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["option",{"_index":536,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["optional",{"_index":52,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"contributing.html":{},"index.html":{}}}],["options",{"_index":58,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["options.interface.ts",{"_index":269,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["options.type.ts",{"_index":838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["order",{"_index":463,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["origin",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["out",{"_index":292,"title":{},"body":{"modules/TerminusModule.html":{},"contributing.html":{},"overview.html":{}}}],["outline",{"_index":431,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":596,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":386,"title":{},"body":{"contributing.html":{}}}],["overflow's",{"_index":397,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":825,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":158,"title":{"dependencies.html":{}},"body":{"injectables/GRPCHealthIndicator.html":{},"index.html":{}}}],["package.json",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["party",{"_index":251,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["pass",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["passing",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["patch",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["path",{"_index":121,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["peer",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["people",{"_index":407,"title":{},"body":{"contributing.html":{}}}],["perf",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["performance",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["pick",{"_index":309,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["ping",{"_index":91,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"coverage.html":{}}}],["pingcheck",{"_index":41,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["pingcheck(key",{"_index":55,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["place",{"_index":389,"title":{},"body":{"contributing.html":{}}}],["please",{"_index":371,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["port",{"_index":227,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["possible",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["pr",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["practice",{"_index":153,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["precise",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":277,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{},"contributing.html":{}}}],["prepends",{"_index":275,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["present",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["prevent",{"_index":436,"title":{},"body":{"contributing.html":{}}}],["previous",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":710,"title":{},"body":{"contributing.html":{}}}],["problem",{"_index":360,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":206,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{},"contributing.html":{}}}],["progressive",{"_index":742,"title":{},"body":{"index.html":{}}}],["project",{"_index":441,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["prominently",{"_index":401,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":74,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["prompt",{"_index":777,"title":{},"body":{"index.html":{}}}],["properties",{"_index":94,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["proposal",{"_index":424,"title":{},"body":{"contributing.html":{}}}],["protected",{"_index":42,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["protopath",{"_index":160,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["provide",{"_index":316,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"contributing.html":{}}}],["provided",{"_index":53,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"index.html":{}}}],["providers",{"_index":284,"title":{},"body":{"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"overview.html":{}}}],["provides",{"_index":325,"title":{},"body":{"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":109,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["publish",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":420,"title":{},"body":{"contributing.html":{}}}],["push",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":359,"title":{},"body":{"contributing.html":{}}}],["questions",{"_index":376,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":703,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":548,"title":{},"body":{"contributing.html":{}}}],["reach",{"_index":410,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":372,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["readable",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["readily",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["real",{"_index":409,"title":{},"body":{"contributing.html":{}}}],["rebase",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["receives",{"_index":340,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{}}}],["recommend",{"_index":773,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":155,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["redirect",{"_index":406,"title":{},"body":{"contributing.html":{}}}],["redisoptions",{"_index":844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":236,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{}}}],["refhost",{"_index":259,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reflect",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":33,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["relates",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["remote",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":189,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["repo",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["reports",{"_index":380,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":418,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represents",{"_index":181,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{}}}],["reproduce",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["reproduced",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["reproducible",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["reproduction",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":69,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["requesting",{"_index":785,"title":{},"body":{"index.html":{}}}],["requests",{"_index":35,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["require",{"_index":100,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{}}}],["required",{"_index":546,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reset",{"_index":291,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}],["responds",{"_index":239,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["respons",{"_index":61,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["response",{"_index":337,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{},"coverage.html":{},"index.html":{}}}],["rest",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":19,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":22,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/StorageExceededError.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"classes/UnhealthyResponseCodeError.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":195,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["returns",{"_index":63,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["revert",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["reverted",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["reverts",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["rm",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["rmqoptions",{"_index":849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rss",{"_index":214,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["rssthreshold",{"_index":213,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{}}}],["rules",{"_index":366,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":515,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["running",{"_index":107,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{}}}],["rxjs",{"_index":628,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["safely",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["samples",{"_index":624,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["saucelabs",{"_index":656,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":403,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["scalable",{"_index":747,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":711,"title":{},"body":{"contributing.html":{}}}],["scenario",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["scopes",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":450,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":592,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["seen",{"_index":151,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["semi",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":700,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":343,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{},"index.html":{}}}],["service",{"_index":133,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":786,"title":{},"body":{"index.html":{}}}],["settings.interface.ts",{"_index":93,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["sha",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["shell",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":748,"title":{},"body":{"index.html":{}}}],["sign",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["signed",{"_index":701,"title":{},"body":{"contributing.html":{}}}],["signing",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":705,"title":{},"body":{"contributing.html":{}}}],["size",{"_index":113,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["small",{"_index":444,"title":{},"body":{"contributing.html":{}}}],["someone",{"_index":396,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":415,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["space",{"_index":205,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{},"contributing.html":{},"dependencies.html":{}}}],["special",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["specification",{"_index":138,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["specs",{"_index":156,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"contributing.html":{}}}],["sponsors",{"_index":807,"title":{},"body":{"index.html":{}}}],["stack",{"_index":385,"title":{},"body":{"contributing.html":{}}}],["standart",{"_index":137,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["start",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":345,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["statements",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"modules/TerminusModule.html":{}}}],["status",{"_index":193,"title":{},"body":{"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"index.html":{}}}],["stay",{"_index":392,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":150,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"contributing.html":{}}}],["storage",{"_index":105,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"classes/StorageExceededError.html":{}}}],["storageexceedederror",{"_index":243,"title":{"classes/StorageExceededError.html":{}},"body":{"classes/StorageExceededError.html":{},"coverage.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["style",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["submission",{"_index":364,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":419,"title":{},"body":{"contributing.html":{}}}],["submitted",{"_index":448,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":416,"title":{},"body":{"contributing.html":{}}}],["successfully",{"_index":439,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":767,"title":{},"body":{"index.html":{}}}],["suggest",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["suite",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["suites",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["super.getstatus(key",{"_index":196,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["support",{"_index":375,"title":{},"body":{"contributing.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":427,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["svg",{"_index":823,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":314,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["synchronously",{"_index":300,"title":{},"body":{"modules/TerminusModule.html":{}}}],["system",{"_index":399,"title":{},"body":{"contributing.html":{}}}],["systematically",{"_index":404,"title":{},"body":{"contributing.html":{}}}],["table",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":388,"title":{},"body":{"contributing.html":{}}}],["tagged",{"_index":387,"title":{},"body":{"contributing.html":{}}}],["tbc",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["tcpoptions",{"_index":848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["technologies",{"_index":766,"title":{},"body":{"index.html":{}}}],["tense",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["terminus",{"_index":252,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/UnhealthyResponseCodeError.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["terminusbootstrapservice",{"_index":246,"title":{"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["terminusendpoint",{"_index":267,"title":{"interfaces/TerminusEndpoint.html":{}},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{},"coverage.html":{}}}],["terminuslogger",{"_index":323,"title":{},"body":{"interfaces/TerminusModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["terminusmodule",{"_index":278,"title":{"modules/TerminusModule.html":{}},"body":{"modules/TerminusModule.html":{},"modules.html":{},"overview.html":{}}}],["terminusmodule.forrootasync",{"_index":792,"title":{},"body":{"index.html":{}}}],["terminusmoduleasyncoptions",{"_index":304,"title":{"interfaces/TerminusModuleAsyncOptions.html":{}},"body":{"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"coverage.html":{}}}],["terminusmoduleoptions",{"_index":258,"title":{"interfaces/TerminusModuleOptions.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{}}}],["terminusoptionsfactory",{"_index":324,"title":{"interfaces/TerminusOptionsFactory.html":{}},"body":{"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["test",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["tested",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["tests",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["thank",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["thanks",{"_index":806,"title":{},"body":{"index.html":{}}}],["that's",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["therefore",{"_index":771,"title":{},"body":{"index.html":{}}}],["these.revert",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["third",{"_index":250,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["threshold",{"_index":115,"title":{},"body":{"injectables/DiskHealthIndicator.html":{},"classes/StorageExceededError.html":{}}}],["thresholdpercent",{"_index":125,"title":{},"body":{"injectables/DiskHealthIndicator.html":{}}}],["through",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":776,"title":{},"body":{"index.html":{}}}],["thrown",{"_index":10,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"classes/StorageExceededError.html":{},"classes/TimeoutError.html":{},"classes/UnhealthyResponseCodeError.html":{}}}],["time",{"_index":99,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/MongoosePingCheckSettings.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"contributing.html":{}}}],["timeout",{"_index":62,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"classes/TimeoutError.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"index.html":{}}}],["timeouterror",{"_index":327,"title":{"classes/TimeoutError.html":{}},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["today",{"_index":353,"title":{},"body":{"contributing.html":{}}}],["tools",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["topromise",{"_index":173,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{}}}],["touch",{"_index":812,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["transport",{"_index":223,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["transport.tcp",{"_index":224,"title":{},"body":{"injectables/MicroserviceHealthIndicator.html":{}}}],["travis",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":192,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["twitter",{"_index":820,"title":{},"body":{"index.html":{}}}],["two",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":51,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"interfaces/GRPCHealthService.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/MongoosePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":830,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":332,"title":{},"body":{"injectables/TypeOrmHealthIndicator.html":{},"index.html":{}}}],["typeormhealthindicator",{"_index":289,"title":{"injectables/TypeOrmHealthIndicator.html":{}},"body":{"modules/TerminusModule.html":{},"injectables/TypeOrmHealthIndicator.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["typeormhealthindicator.pingcheck(&#39;database&#39",{"_index":334,"title":{},"body":{"injectables/TypeOrmHealthIndicator.html":{}}}],["typeormmodule",{"_index":790,"title":{},"body":{"index.html":{}}}],["typeormmodule.forroot",{"_index":791,"title":{},"body":{"index.html":{}}}],["typeormpingchecksettings",{"_index":333,"title":{"interfaces/TypeOrmPingCheckSettings.html":{}},"body":{"injectables/TypeOrmHealthIndicator.html":{},"interfaces/TypeOrmPingCheckSettings.html":{},"coverage.html":{}}}],["typescript",{"_index":186,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["ui",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["unfortunately",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["unhealthy",{"_index":341,"title":{},"body":{"classes/UnhealthyResponseCodeError.html":{}}}],["unhealthyresponsecodeerror",{"_index":335,"title":{"classes/UnhealthyResponseCodeError.html":{}},"body":{"classes/UnhealthyResponseCodeError.html":{},"coverage.html":{}}}],["unit",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":135,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["updates",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["upstream",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":57,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{},"index.html":{}}}],["usage",{"_index":779,"title":{},"body":{"index.html":{}}}],["use",{"_index":207,"title":{},"body":{"injectables/MemoryHealthIndicator.html":{},"contributing.html":{},"index.html":{}}}],["useclass",{"_index":311,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["used",{"_index":31,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"injectables/TypeOrmHealthIndicator.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["useexisting",{"_index":312,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{}}}],["usefactory",{"_index":313,"title":{},"body":{"interfaces/TerminusModuleAsyncOptions.html":{},"index.html":{}}}],["useglobalprefix",{"_index":273,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["users",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":136,"title":{},"body":{"injectables/GRPCHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["value",{"_index":67,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":856,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["version",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["versions",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["very",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":411,"title":{},"body":{"contributing.html":{}}}],["viewing",{"_index":394,"title":{},"body":{"contributing.html":{}}}],["visible",{"_index":402,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":266,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["voting",{"_index":398,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":377,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["we'll",{"_index":709,"title":{},"body":{"contributing.html":{}}}],["wealth",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["web",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["website",{"_index":818,"title":{},"body":{"index.html":{}}}],["well",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":81,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TypeOrmHealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["white",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["word",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":425,"title":{},"body":{"contributing.html":{}}}],["workarounds",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["working",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["xor",{"_index":852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["yes",{"_index":83,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DiskHealthIndicator.html":{},"injectables/GRPCHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MemoryHealthIndicator.html":{},"injectables/MicroserviceHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"modules/TerminusModule.html":{},"injectables/TypeOrmHealthIndicator.html":{}}}],["you'd",{"_index":810,"title":{},"body":{"index.html":{}}}],["you've",{"_index":381,"title":{},"body":{"contributing.html":{}}}],["zone.js",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["zoom",{"_index":290,"title":{},"body":{"modules/TerminusModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ConnectionNotFoundError.html":{"url":"classes/ConnectionNotFoundError.html","title":"class - ConnectionNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectionNotFoundError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/connection-not-found.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the connection\ninstance was not found in the application context\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n            \n                Example\n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DNSHealthIndicator.html":{"url":"injectables/DNSHealthIndicator.html","title":"injectable - DNSHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DNSHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/dns/dns.health.ts\n        \n\n            \n                Description\n            \n            \n                The DNSHealthIndicator contains health indicators\nwhich are used for health checks related to HTTP requests\nand DNS\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n\n                \n                    \n                            Initializes the health indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpService provided by Nest\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pingCheck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pingCheck(key: string, url: string, options: AxiosRequestConfig)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the given url respons in the given timeout\nand returns a result object corresponding to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The url which should be request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            AxiosRequestConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Optional axios options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            dnsHealthIndicator.pingCheck(&#39;google&#39;, &#39;https://google.com&#39;, { timeout: 800 })\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabasePingCheckSettings.html":{"url":"interfaces/DatabasePingCheckSettings.html","title":"interface - DatabasePingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabasePingCheckSettings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/databse-ping-check-settings.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:     Connection | MongooseConnection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Connection | MongooseConnection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiskHealthIndicator.html":{"url":"injectables/DiskHealthIndicator.html","title":"injectable - DiskHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DiskHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/disk/disk.health.ts\n        \n\n            \n                Description\n            \n            \n                The DiskHealthIndicator contains checks which are related\nto the disk storage of the current running machine\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkStorage\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkStorage(key: string, options: DiskHealthIndicatorOptions)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the size of the given size has exceeded the\ngiven threshold\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DiskHealthIndicatorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            // The used disk storage should not exceed 250 GB\ndiskHealthIndicator.checkStorage(&#39;storage&#39;, { threshold: 250 * 1024 * 1024 * 1024, path: &#39;/&#39; });\n                        \n                        \n                            // The used disk storage should not exceed 50% of the full disk size\ndiskHealthIndicator.checkStorage(&#39;storage&#39;, { thresholdPercent: 0.5, path: &#39;C:\\&#39; });\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The result of the health indicator check\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GRPCHealthIndicator.html":{"url":"injectables/GRPCHealthIndicator.html","title":"injectable - GRPCHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GRPCHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/microservice/grpc.health.ts\n        \n\n            \n                Description\n            \n            \n                The GRPCHealthIndicator is used for health checks\nrelated to GRPC\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkService\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n                \n                    \n                            Initializes the health indicator\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkService(key: string, service: string, options: CheckGRPCServiceOptions)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the given service is up using the standart health check\nspecification of GRPC.\nhttps://github.com/grpc/grpc/blob/master/doc/health-checking.md\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    service\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The service which should be checked\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                CheckGRPCServiceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Configuration for the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            grpc.checkService(&#39;hero_service&#39;, &#39;hero.health.v1&#39;)\n                        \n                        \n                            // Change the timeout\ngrpc.checkService(&#39;hero_service&#39;, &#39;hero.health.v1&#39;, { timeout: 300 })\n                        \n                        \n                            // You can customize the health check\n// by giving these options. Nonetheless it is still seen\n// as best practice to implement the recommended GRPC specs\ngrpc.checkService(&#39;hero_service&#39;, &#39;hero.health.v1&#39;, {\ntimeout: 500,\npackage: &#39;grpc.health.v2&#39;,\nprotoPath: join(__dirname, &#39;./protos/my-custom-health.v1&#39;),\n// The name of the service you need for the health check\nhealthServiceName: &#39;Health&#39;,\n// Your custom function which checks the service\nhealthServiceCheck: (healthService: any, service: string) =&gt;\nhealthService.check({ service }).toPromise(),\n})\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GRPCHealthService.html":{"url":"interfaces/GRPCHealthService.html","title":"interface - GRPCHealthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GRPCHealthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/microservice/grpc.health.ts\n        \n\n            \n                Description\n            \n            \n                The interface of the default GRPC HealthService,\naccording to the GRPC specs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    check\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(data: HealthCheckRequest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            HealthCheckRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthIndicator.html":{"url":"classes/HealthIndicator.html","title":"class - HealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/health-indicator.ts\n        \n\n            \n                Description\n            \n            \n                Represents an abstract health indicator\nwith common functionalities\nA custom HealthIndicator should inherit the HealthIndicator class.\n```typescript\n *\n\nclass MyHealthIndicator extends HealthIndicator {\npublic check(key: string) {\n// Replace with the actual check\nconst isHealthy = true;\n// Returns { [key]: { status: 'up', message: 'Up and running' } }\nreturn super.getStatus(key, isHealthy, { message: 'Up and running' });\n}\n}\n```\n\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryHealthIndicator.html":{"url":"injectables/MemoryHealthIndicator.html","title":"injectable - MemoryHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemoryHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/memory/memory.health.ts\n        \n\n            \n                Description\n            \n            \n                The MemoryHealthIndicator contains checks which are related\nto the memory storage of the current running machine\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkHeap\n                            \n                            \n                                    Public\n                                    Async\n                                checkRSS\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkHeap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHeap(key: string, heapUsedThreshold: number)\n                \n            \n\n\n\n\n            \n                \n                    Checks the heap space and returns the status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    heapUsedThreshold\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            // The process should not use more than 150MB memory\nmemoryHealthIndicator.checkRSS(&#39;memory_heap&#39;, 150 * 1024 * 1024);\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The result of the health indicator check\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkRSS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRSS(key: string, rssThreshold: number)\n                \n            \n\n\n\n\n            \n                \n                    Checks the rss space and returns the status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    rssThreshold\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            // The process should not have more than 150MB allocated\nmemoryHealthIndicator.checkRSS(&#39;memory_rss&#39;, 150 * 1024 * 1024);\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The result of the health indicator check\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MicroserviceHealthIndicator.html":{"url":"injectables/MicroserviceHealthIndicator.html","title":"injectable - MicroserviceHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MicroserviceHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/microservice/microservice.health.ts\n        \n\n            \n                Description\n            \n            \n                The MicroserviceHealthIndicator is a health indicators\nwhich is used for health checks related to microservices\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n                \n                    \n                            Initializes the health indicator\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pingCheck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pingCheck(key: string, options: MicroserviceHealthIndicatorOptions)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the given microservice is up\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                MicroserviceHealthIndicatorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options of the microservice\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            microservice.pingCheck(&#39;tcp&#39;, {\ntransport: Transport.TCP,\noptions: { host: &#39;localhost&#39;, port: 3001 },\n})\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseHealthIndicator.html":{"url":"injectables/MongooseHealthIndicator.html","title":"injectable - MongooseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/mongoose.health.ts\n        \n\n            \n                Description\n            \n            \n                The MongooseHealthIndicator contains health indicators\nwhich are used for health checks related to Mongoose\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                pingCheck\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n\n                \n                    \n                            Initializes the MongooseHealthIndicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NestJS module reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            pingCheck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pingCheck(key: string, options: MongoosePingCheckSettings)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the MongoDB responds in (default) 1000ms and\nreturns a result object corresponding to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                MongoosePingCheckSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The options for the ping\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            mongooseHealthIndicator.pingCheck(&#39;mongodb&#39;, { timeout: 1500 });\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePingCheckSettings.html":{"url":"interfaces/MongoosePingCheckSettings.html","title":"interface - MongoosePingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MongoosePingCheckSettings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/mongoose.health.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageExceededError.html":{"url":"classes/StorageExceededError.html","title":"class - StorageExceededError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageExceededError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/storage-exceeded.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the given storage threshold\nhas exceeded.\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n            \n                Example\n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TerminusBootstrapService.html":{"url":"injectables/TerminusBootstrapService.html","title":"injectable - TerminusBootstrapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TerminusBootstrapService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/terminus-bootstrap.service.ts\n        \n\n            \n                Description\n            \n            \n                Bootstraps the third party Terminus library with the\nconfigured Module options\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHealthChecksMap\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: TerminusModuleOptions, terminus: Terminus, refHost: HttpAdapterHost, applicationConfig: ApplicationConfig)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TerminusModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        terminus\n                                                  \n                                                        \n                                                                    Terminus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfig\n                                                  \n                                                        \n                                                                    ApplicationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHealthChecksMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealthChecksMap()\n                \n            \n\n\n\n\n            \n                \n                    Returns the health check map using the configured health\nindicators\n\n\n                    \n                        Returns :     HealthCheckMap\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Gets called when the application gets bootstrapped.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusEndpoint.html":{"url":"interfaces/TerminusEndpoint.html","title":"interface - TerminusEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusEndpoint\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Represents one endpoint / health check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        healthIndicators\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        useGlobalPrefix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        healthIndicators\n                                    \n                                \n                                \n                                    \n                                        healthIndicators:         HealthIndicatorFunction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HealthIndicatorFunction[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The health checks which should get executed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the endpoint / health check\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useGlobalPrefix\n                                    \n                                \n                                \n                                    \n                                        useGlobalPrefix:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Prepends the global prefix to the health url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusModule.html":{"url":"modules/TerminusModule.html","title":"module - TerminusModule","body":"\n                   \n\n\n\n\n    Modules\n    TerminusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusModule\n\n\n\ncluster_TerminusModule_exports\n\n\n\ncluster_TerminusModule_providers\n\n\n\n\nDNSHealthIndicator \n\nDNSHealthIndicator \n\n\n\nDiskHealthIndicator \n\nDiskHealthIndicator \n\n\n\nGRPCHealthIndicator \n\nGRPCHealthIndicator \n\n\n\nMemoryHealthIndicator \n\nMemoryHealthIndicator \n\n\n\nMicroserviceHealthIndicator \n\nMicroserviceHealthIndicator \n\n\n\nMongooseHealthIndicator \n\nMongooseHealthIndicator \n\n\n\nTypeOrmHealthIndicator \n\nTypeOrmHealthIndicator \n\n\n\nTerminusModule\n\nTerminusModule\n\nDNSHealthIndicator  -->\n\nTerminusModule->DNSHealthIndicator \n\n\n\nDiskHealthIndicator  -->\n\nTerminusModule->DiskHealthIndicator \n\n\n\nGRPCHealthIndicator  -->\n\nTerminusModule->GRPCHealthIndicator \n\n\n\nMemoryHealthIndicator  -->\n\nTerminusModule->MemoryHealthIndicator \n\n\n\nMicroserviceHealthIndicator  -->\n\nTerminusModule->MicroserviceHealthIndicator \n\n\n\nMongooseHealthIndicator  -->\n\nTerminusModule->MongooseHealthIndicator \n\n\n\nTypeOrmHealthIndicator  -->\n\nTerminusModule->TypeOrmHealthIndicator \n\n\n\n\n\nDNSHealthIndicator\n\nDNSHealthIndicator\n\nTerminusModule -->\n\nDNSHealthIndicator->TerminusModule\n\n\n\n\n\nDiskHealthIndicator\n\nDiskHealthIndicator\n\nTerminusModule -->\n\nDiskHealthIndicator->TerminusModule\n\n\n\n\n\nGRPCHealthIndicator\n\nGRPCHealthIndicator\n\nTerminusModule -->\n\nGRPCHealthIndicator->TerminusModule\n\n\n\n\n\nMemoryHealthIndicator\n\nMemoryHealthIndicator\n\nTerminusModule -->\n\nMemoryHealthIndicator->TerminusModule\n\n\n\n\n\nMicroserviceHealthIndicator\n\nMicroserviceHealthIndicator\n\nTerminusModule -->\n\nMicroserviceHealthIndicator->TerminusModule\n\n\n\n\n\nMongooseHealthIndicator\n\nMongooseHealthIndicator\n\nTerminusModule -->\n\nMongooseHealthIndicator->TerminusModule\n\n\n\n\n\nTypeOrmHealthIndicator\n\nTypeOrmHealthIndicator\n\nTerminusModule -->\n\nTypeOrmHealthIndicator->TerminusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Terminus Module which represents the integration of the\n@godaddy/terminus module with the Nest ecosystem.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DNSHealthIndicator\n                        \n                        \n                            DiskHealthIndicator\n                        \n                        \n                            GRPCHealthIndicator\n                        \n                        \n                            MemoryHealthIndicator\n                        \n                        \n                            MicroserviceHealthIndicator\n                        \n                        \n                            MongooseHealthIndicator\n                        \n                        \n                            TypeOrmHealthIndicator\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DNSHealthIndicator\n                        \n                        \n                            DiskHealthIndicator\n                        \n                        \n                            GRPCHealthIndicator\n                        \n                        \n                            MemoryHealthIndicator\n                        \n                        \n                            MicroserviceHealthIndicator\n                        \n                        \n                            MongooseHealthIndicator\n                        \n                        \n                            TypeOrmHealthIndicator\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: TerminusModuleOptions)\n                \n            \n\n\n\n\n            \n                \n                    Bootstraps the Terminus Module synchronously\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                TerminusModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the Terminus Module\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: TerminusModuleAsyncOptions)\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap the Terminus Module asynchronously\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                TerminusModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the Terminus module\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleAsyncOptions.html":{"url":"interfaces/TerminusModuleAsyncOptions.html","title":"interface - TerminusModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleAsyncOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options f$r the asynchronous Terminus module creation\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     (string | symbol | Function | Type | Abstract)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | symbol | Function | Type | Abstract)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The providers which should get injected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Import existing providers from other module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The factory which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleOptions.html":{"url":"interfaces/TerminusModuleOptions.html","title":"interface - TerminusModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options of the terminus module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoints\n                                \n                                \n                                            Optional\n                                        logger\n                                \n                                \n                                            Optional\n                                        useGlobalPrefix\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                    \n                                \n                                \n                                    \n                                        endpoints:         TerminusEndpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TerminusEndpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of endpoints\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                    \n                                \n                                \n                                    \n                                        logger:         TerminusLogger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TerminusLogger\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useGlobalPrefix\n                                    \n                                \n                                \n                                    \n                                        useGlobalPrefix:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Prepends the global prefix to the health url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusOptionsFactory.html":{"url":"interfaces/TerminusOptionsFactory.html","title":"interface - TerminusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusOptionsFactory\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The interface for the factory which provides the Terminus options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createTerminusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTerminusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTerminusOptions()\n                \n            \n\n\n\n\n            \n                \n                    The function which returns the Terminus Options\n\n\n                    \n                        Returns :         Promise | TerminusModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError.html":{"url":"classes/TimeoutError.html","title":"class - TimeoutError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/timeout-error.ts\n        \n\n            \n                Description\n            \n            \n                Gets thrown when the timeout of the health check exceeds\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n            \n                Example\n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmHealthIndicator.html":{"url":"injectables/TypeOrmHealthIndicator.html","title":"injectable - TypeOrmHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmHealthIndicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/typeorm.health.ts\n        \n\n            \n                Description\n            \n            \n                The TypeOrmHealthIndicator contains health indicators\nwhich are used for health checks related to TypeOrm\n\n            \n\n            \n                Extends\n            \n            \n                        HealthIndicator\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n\n                \n                    \n                            Initializes the TypeOrmHealthIndicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NestJS module reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pingCheck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pingCheck(key: string, options: TypeOrmPingCheckSettings)\n                \n            \n\n\n\n\n            \n                \n                    Checks if responds in (default) 1000ms and\nreturns a result object corresponding to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The key which will be used for the result object\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                TypeOrmPingCheckSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The options for the ping\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typeOrmHealthIndicator.pingCheck(&#39;database&#39;, { timeout: 1500 });\n                        \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStatus(key: string, isHealthy: boolean, data?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Generates the health indicator result object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key which will be used as key for the result object\n\n                                    \n                                \n                                \n                                    isHealthy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the health indicator is healthy\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional data which will get appended to the result object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HealthIndicatorResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeOrmPingCheckSettings.html":{"url":"interfaces/TypeOrmPingCheckSettings.html","title":"interface - TypeOrmPingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeOrmPingCheckSettings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/typeorm.health.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:     Connection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Connection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnhealthyResponseCodeError.html":{"url":"classes/UnhealthyResponseCodeError.html","title":"class - UnhealthyResponseCodeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnhealthyResponseCodeError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/unhealthy-response-code.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the terminus client receives\nan unhealthy response code from the server.\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n            \n                Example\n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to Nest\nWe would love for you to contribute to Nest and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\n\n\n\n Code of Conduct\nHelp us keep Nest open and inclusive. Please read and follow our [Code of Conduct][coc]. -->\n\n Got a Question or Problem?\nDo not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on Stack Overflow where the questions should be tagged with tag nestjs.\nStack Overflow is a much better place to ask questions since:\n\n\nquestions and answers stay available for public viewing so your question / answer might help someone else\nStack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\nIf you would like to chat about the question in real-time, you can reach out via our gitter channel.\n Found a Bug?\nIf you find a bug in the source code, you can help us by\nsubmitting an issue to our GitHub Repository. Even better, you can\nsubmit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project. For your issue name, please prefix your proposal with [discussion], for example \"[discussion]: your feature idea\".\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submission Guidelines\n Submitting an Issue\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using a repository or Gist. Having a live, reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:\n\nversion of NestJS used\n3rd-party libraries and their versions\nand most importantly - a use-case that fails\n\n\n\n\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that don't have enough info to be reproduced.\nYou can file new issues by filling out our new issue form.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\n\nFork the nestjs/nest repo.\n\nMake your changes in a new git branch:\n  git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\n\nRun the full Nest test suite, as described in the developer documentation,\nand ensure that all tests pass.\n\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n  git commit -a Note: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n git push origin my-fix-branch\nIn GitHub, send a pull request to nestjs:master.\n\n\n\nIf we suggest changes then:\n\nMake the required updates.\n\nRe-run the Nest test suites to ensure tests are still passing.\n\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n  git push origin --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\n\nAll public API methods must be documented. (Details TBC). -->\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters. An automated formatter is available, see\nDEVELOPER.md.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the Nest change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nFooter should contain a closing reference to an issue if any.\nSamples: (even more samples)\ndocs(changelog) update change log to beta.5bugfix(@nestjs/core) need to depend on latest rxjs and zone.js\n\nThe version in our package.json gets copied to the one we publish, and users need the latest of these.Revert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of the reverted commit. In the body it should say: This reverts commit ., where the hash is the SHA of the commit being reverted.\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeature: A new feature\nbugfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\n\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla]. -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/errors/connection-not-found.error.ts\n            \n            class\n            ConnectionNotFoundError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/errors/storage-exceeded.error.ts\n            \n            class\n            StorageExceededError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/errors/timeout-error.ts\n            \n            class\n            TimeoutError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/errors/unhealthy-response-code.error.ts\n            \n            class\n            UnhealthyResponseCodeError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/health-indicators.provider.ts\n            \n            variable\n            HEALTH_INDICATORS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/databse-ping-check-settings.interface.ts\n            \n            interface\n            DatabasePingCheckSettings\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/mongoose.health.ts\n            \n            injectable\n            MongooseHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/mongoose.health.ts\n            \n            interface\n            MongoosePingCheckSettings\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/typeorm.health.ts\n            \n            injectable\n            TypeOrmHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/typeorm.health.ts\n            \n            interface\n            TypeOrmPingCheckSettings\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/disk/disk.health.ts\n            \n            injectable\n            DiskHealthIndicator\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/dns/dns.health.ts\n            \n            injectable\n            DNSHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/health-indicator.ts\n            \n            class\n            HealthIndicator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/memory/memory.health.ts\n            \n            injectable\n            MemoryHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/microservice/grpc.health.ts\n            \n            injectable\n            GRPCHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/microservice/grpc.health.ts\n            \n            interface\n            GRPCHealthService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/microservice/microservice.health.ts\n            \n            injectable\n            MicroserviceHealthIndicator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            interface\n            TerminusEndpoint\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            interface\n            TerminusModuleAsyncOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            interface\n            TerminusModuleOptions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            interface\n            TerminusOptionsFactory\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/terminus-bootstrap.service.ts\n            \n            injectable\n            TerminusBootstrapService\n            \n                75 %\n                (3/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            check-disk-space : 2.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @godaddy/terminus : ^4.2.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rxjs : ^6.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nThis module contains integrated healthchecks for Nest. These healthchecks run in an internal execution manager based on the Terminus-package.\nInstallation\nIn order to install @nestjs/terminus you must install @godaddy/terminus - the library which will be used\nto execute the healthchecks.\n@nestjs/terminus integrates with a lot of cool technologies, such as typeorm, grpc, mongodb, and many more!\nIn most cases you do not want to install all the optional dependencies which would be needed for these integrations.\nTherefore we highly recommend to use the --no-optional option. In case you have missed a dependency, @nestjs/terminus\nwill throw an error and prompt you to install the required dependency. So you will only install what is actually required!\n\nnpm install --save @nestjs/terminus @godaddy/terminus --no-optional\nUsage\nImport the Terminus module with the following options for a healthcheck with a database health inidcator.\n\nconst getTerminusOptions = (\n  db: TypeOrmHealthIndicator,\n): TerminusModuleOptions => ({\n  endpoints: [\n    {\n      // The health check will be available with /health\n      url: '/health',\n      // All the indicator which will be checked when requesting /health\n      healthIndicators: [\n        // Set the timeout for a response to 300ms\n        async () => db.pingCheck('database', { timeout: 300 })\n      ],\n    },\n  ],\n});\n\n@Module({\n  imports:[\n    // Make sure TypeOrmModule is available in the module context\n    TypeOrmModule.forRoot({ ... }),\n    TerminusModule.forRootAsync({\n      // Inject the TypeOrmHealthIndicator provided by nestjs/terminus\n      inject: [TypeOrmHealthIndicator],\n      useFactory: db => getTerminusOptions(db),\n    }),\n  ],\n})\nexport class HealthModule { }\nIf everything is set up correctly, you can access the healthcheck on http://localhost:3000/health.\n\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"database\": {\n      \"status\": \"up\"\n    }\n  }\n}\nFor more information, see docs or internal documentation. You can find further samples in the samples/ folder of this repository.\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec and Livio Brunner\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusModule\n\n\n\ncluster_TerminusModule_exports\n\n\n\ncluster_TerminusModule_providers\n\n\n\n\nDNSHealthIndicator \n\nDNSHealthIndicator \n\n\n\nDiskHealthIndicator \n\nDiskHealthIndicator \n\n\n\nGRPCHealthIndicator \n\nGRPCHealthIndicator \n\n\n\nMemoryHealthIndicator \n\nMemoryHealthIndicator \n\n\n\nMicroserviceHealthIndicator \n\nMicroserviceHealthIndicator \n\n\n\nMongooseHealthIndicator \n\nMongooseHealthIndicator \n\n\n\nTypeOrmHealthIndicator \n\nTypeOrmHealthIndicator \n\n\n\nTerminusModule\n\nTerminusModule\n\nDNSHealthIndicator  -->\n\nTerminusModule->DNSHealthIndicator \n\n\n\nDiskHealthIndicator  -->\n\nTerminusModule->DiskHealthIndicator \n\n\n\nGRPCHealthIndicator  -->\n\nTerminusModule->GRPCHealthIndicator \n\n\n\nMemoryHealthIndicator  -->\n\nTerminusModule->MemoryHealthIndicator \n\n\n\nMicroserviceHealthIndicator  -->\n\nTerminusModule->MicroserviceHealthIndicator \n\n\n\nMongooseHealthIndicator  -->\n\nTerminusModule->MongooseHealthIndicator \n\n\n\nTypeOrmHealthIndicator  -->\n\nTerminusModule->TypeOrmHealthIndicator \n\n\n\n\n\nDNSHealthIndicator\n\nDNSHealthIndicator\n\nTerminusModule -->\n\nDNSHealthIndicator->TerminusModule\n\n\n\n\n\nDiskHealthIndicator\n\nDiskHealthIndicator\n\nTerminusModule -->\n\nDiskHealthIndicator->TerminusModule\n\n\n\n\n\nGRPCHealthIndicator\n\nGRPCHealthIndicator\n\nTerminusModule -->\n\nGRPCHealthIndicator->TerminusModule\n\n\n\n\n\nMemoryHealthIndicator\n\nMemoryHealthIndicator\n\nTerminusModule -->\n\nMemoryHealthIndicator->TerminusModule\n\n\n\n\n\nMicroserviceHealthIndicator\n\nMicroserviceHealthIndicator\n\nTerminusModule -->\n\nMicroserviceHealthIndicator->TerminusModule\n\n\n\n\n\nMongooseHealthIndicator\n\nMongooseHealthIndicator\n\nTerminusModule -->\n\nMongooseHealthIndicator->TerminusModule\n\n\n\n\n\nTypeOrmHealthIndicator\n\nTypeOrmHealthIndicator\n\nTerminusModule -->\n\nTypeOrmHealthIndicator->TerminusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CheckDiskSpace   (lib/.../disk.health.ts)\n                        \n                        \n                            CheckGRPCServiceOptions   (lib/.../grpc.health.ts)\n                        \n                        \n                            ClientOptions   (lib/.../microservice.health.ts)\n                        \n                        \n                            DiskHealthIndicatorOptions   (lib/.../disk-health-options.type.ts)\n                        \n                        \n                            HealthIndicatorFunction   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            HealthIndicatorResult   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            HealthServiceCheck   (lib/.../grpc.health.ts)\n                        \n                        \n                            MicroserviceHealthIndicatorOptions   (lib/.../microservice.health.ts)\n                        \n                        \n                            TerminusLogger   (lib/.../terminus-module-options.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/health-indicators/disk/disk.health.ts\n    \n    \n        \n            \n                \n                    \n                    CheckDiskSpace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    lib/health-indicators/microservice/grpc.health.ts\n    \n    \n        \n            \n                \n                    \n                    CheckGRPCServiceOptions\n                \n            \n            \n                \n                    The options for the grpc.checkService health indicator function\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HealthServiceCheck\n                \n            \n            \n                \n                    The function to check whether the service is up or down\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    lib/health-indicators/microservice/microservice.health.ts\n    \n    \n        \n            \n                \n                    \n                    ClientOptions\n                \n            \n            \n                \n                        RedisOptions | NatsOptions | MqttOptions | GrpcOptions | TcpOptions | RmqOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MicroserviceHealthIndicatorOptions\n                \n            \n            \n                \n                    The options for the MicroserviceHealthInidcator\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    lib/health-indicators/disk/disk-health-options.type.ts\n    \n    \n        \n            \n                \n                    \n                    DiskHealthIndicatorOptions\n                \n            \n            \n                \n                    The options of the disk health indicator\n\n                \n            \n            \n                \n                        XOR\n\n                \n            \n        \n    \n    lib/interfaces/health-indicator.interface.ts\n    \n    \n        \n            \n                \n                    \n                    HealthIndicatorFunction\n                \n            \n            \n                \n                    A health indicator function for a health check\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HealthIndicatorResult\n                \n            \n            \n                \n                    The result object of a health indicator\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/interfaces/terminus-module-options.interface.ts\n    \n    \n        \n            \n                \n                    \n                    TerminusLogger\n                \n            \n            \n                \n                    The logger which will be used inside the terminus application\nto log errors or messages\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HEALTH_INDICATORS   (lib/.../health-indicators.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/health-indicators.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HEALTH_INDICATORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  TypeOrmHealthIndicator,\n  DNSHealthIndicator,\n  MongooseHealthIndicator,\n  DiskHealthIndicator,\n  MemoryHealthIndicator,\n  MicroserviceHealthIndicator,\n  GRPCHealthIndicator,\n]\n                        \n                    \n\n                \n                    \n                        All the health indicators terminus provides as array\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
